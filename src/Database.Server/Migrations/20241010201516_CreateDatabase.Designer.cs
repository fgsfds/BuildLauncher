// <auto-generated />
using System;
using Database.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241010201516_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Database.Server.DbEntities.AddonTypeDbEntity", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("addon_type", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.AddonsDbEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<byte>("AddonType")
                        .HasColumnType("smallint")
                        .HasColumnName("addon_type_id");

                    b.Property<byte>("GameId")
                        .HasColumnType("smallint")
                        .HasColumnName("game_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("AddonType");

                    b.HasIndex("GameId");

                    b.ToTable("addons", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.DependenciesDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddonVersionId")
                        .HasColumnType("integer")
                        .HasColumnName("version_id");

                    b.Property<string>("DependencyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dependency_id");

                    b.Property<string>("DependencyVersion")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dependency_version");

                    b.HasKey("Id");

                    b.HasIndex("AddonVersionId");

                    b.ToTable("dependencies", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.GamesDbEntity", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("games", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.InstallsDbEntity", b =>
                {
                    b.Property<string>("AddonId")
                        .HasColumnType("text")
                        .HasColumnName("addon_id");

                    b.Property<int>("Installs")
                        .HasColumnType("integer")
                        .HasColumnName("value");

                    b.HasKey("AddonId");

                    b.ToTable("installs", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.RatingsDbEntity", b =>
                {
                    b.Property<string>("AddonId")
                        .HasColumnType("text")
                        .HasColumnName("addon_id");

                    b.Property<decimal>("Rating")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("numeric")
                        .HasColumnName("rating");

                    b.Property<decimal>("RatingSum")
                        .HasColumnType("numeric")
                        .HasColumnName("rating_sum");

                    b.Property<decimal>("RatingTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("rating_total");

                    b.HasKey("AddonId");

                    b.ToTable("ratings", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.ReportsDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddonId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("addon_id");

                    b.Property<string>("ReportText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("AddonId");

                    b.ToTable("reports", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.VersionsDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddonId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("addon_id");

                    b.Property<string>("Author")
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("download_url");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_disabled");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("version");

                    b.HasKey("Id");

                    b.HasIndex("AddonId");

                    b.ToTable("versions", "main");
                });

            modelBuilder.Entity("Database.Server.DbEntities.AddonsDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.AddonTypeDbEntity", "AddonTypeTable")
                        .WithMany()
                        .HasForeignKey("AddonType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Server.DbEntities.GamesDbEntity", "GameTable")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddonTypeTable");

                    b.Navigation("GameTable");
                });

            modelBuilder.Entity("Database.Server.DbEntities.DependenciesDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.VersionsDbEntity", "VersionsTable")
                        .WithMany()
                        .HasForeignKey("AddonVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VersionsTable");
                });

            modelBuilder.Entity("Database.Server.DbEntities.InstallsDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.AddonsDbEntity", "AddonsTable")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddonsTable");
                });

            modelBuilder.Entity("Database.Server.DbEntities.RatingsDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.AddonsDbEntity", "AddonsTable")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddonsTable");
                });

            modelBuilder.Entity("Database.Server.DbEntities.ReportsDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.AddonsDbEntity", "AddonsTable")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddonsTable");
                });

            modelBuilder.Entity("Database.Server.DbEntities.VersionsDbEntity", b =>
                {
                    b.HasOne("Database.Server.DbEntities.AddonsDbEntity", "AddonsTable")
                        .WithMany()
                        .HasForeignKey("AddonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddonsTable");
                });
#pragma warning restore 612, 618
        }
    }
}
